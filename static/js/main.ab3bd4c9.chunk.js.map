{"version":3,"sources":["views/Main/main.module.scss","store/common/index.ts","components/Main/SearchForm/SearchForm.tsx","components/Main/SearchForm/index.ts","components/Main/LineChart/index.ts","components/Main/LineChart/LineChart.tsx","views/Main/index.ts","views/Main/Main.tsx","store/actions/index.ts","App.tsx","store/reducers/marketing-data.reducer.ts","store/reducers/index.ts","store/api/marketing.ts","utilities/searchMarketingData.ts","utilities/indexFilterParameters.ts","store/sagas/marketingSagas.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["module","exports","actionIds","layout","labelCol","span","wrapperCol","SearchForm","handleSearch","datasources","campaigns","name","onFinish","Item","label","mode","allowClear","style","width","placeholder","options","map","d","value","type","htmlType","LineChart","data","ResponsiveContainer","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","Main","dispatch","useDispatch","result","useSelector","store","marketing","filterParameters","useMount","payload","useCallback","className","styles","wrapper","App","Date","getFullYear","defaltQuery","undefined","initialState","fetched","inProgress","error","query","rootReducers","combineReducers","state","action","getMarketingData","a","axios","get","searchMarketingData","entries","output","forEach","entry","campaignMatch","length","includes","campaign","datasourceMatch","datasource","entryClicks","clicks","entryImpressions","impressions","date","currentValue","Object","indexFilterParameters","keys","watchNewGetMarketingDataStart","getMarketingDataSaga","searchMarketingDataSaga","takeLatest","call","response","put","indexedFilterParameters","message","select","oldQuery","isEqual","marketingData","console","warn","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","composeEnhancer","compose","middlewares","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab3bd4c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"main_search-container__2S-YQ\",\"result-container\":\"main_result-container__36LIZ\",\"wrapper\":\"main_wrapper__2di95\"};","export const actionIds = {\n  GET_NUMBER_REQUEST_START:\n    '[0] Request a new number to the NumberGenerator async service.',\n  GET_NUMBER_REQUEST_COMPLETED:\n    '[1] NumberGenerator async service returned a new number.',\n  // GET DATA\n  GET_ALL_MARKETING_DATA_REQUESTED:\n    'GET_ALL_MARKETING_DATA_REQUESTED',\n  GET_ALL_MARKETING_DATA_SUCCEEDED:\n    'GET_ALL_MARKETING_DATA_SUCCEEDED',\n  GET_ALL_MARKETING_DATA_FAILED:\n    'GET_ALL_MARKETING_DATA_FAILED',\n  // SEARCH DATA\n  SEARCH_MARKETING_DATA_REQUESTED:\n    'SEARCH_MARKETING_DATA_REQUESTED',\n  SEARCH_MARKETING_DATA_SUCCEEDED:\n    'SEARCH_MARKETING_DATA_SUCCEEDED',\n  SEARCH_MARKETING_DATA_FAILED:\n    'SEARCH_MARKETING_DATA_FAILED',\n  // FILTER PARAMS\n  SET_FILTER_PARAMETERS:\n    'SET_FILTER_PARAMETERS',\n};\n\nexport interface BaseAction {\n  type: string;\n  payload: any;\n}\n\n\nexport interface MarketingData {\n  date: string,\n  datasource: string,\n  campaign: string,\n  clicks: number,\n  impressions: number,\n}\n\nexport type MarketingSearchQuery = FilterParameters;\n\nexport type ResultEntity = {\n  clicks: number,\n  impressions: number\n}\n\nexport type FilterParameters = {\n  datasources?: string[],\n  campaigns?: string[]\n}\n\nexport type SearchResult = Array<{ date: string } & ResultEntity>;","import React from 'react';\nimport { Select, Form, Button } from 'antd';\n\nconst COL_SPAN = 24;\n\nconst layout = {\n  labelCol: { span: COL_SPAN },\n  wrapperCol: { span: COL_SPAN },\n};\n\ntype SearchFormProps = {\n    handleSearch: (data:any) => void,\n    datasources?: string[],\n    campaigns?: string[]\n};\n\nconst SearchForm = ({ handleSearch, datasources, campaigns } : SearchFormProps) : JSX.Element  => {\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={handleSearch}\n    >\n      <Form.Item\n        label=\"Datasources\"\n        name=\"datasources\"\n        {...layout}\n      >\n        <Select\n          mode=\"multiple\"\n          allowClear\n          style={{ width: '100%' }}\n          placeholder=\"All\"\n          options={datasources?.map(d => ({ label: d, value: d }))}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Campaigns\"\n        name=\"campaigns\"\n        {...layout}\n      >\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"All\"\n          style={{ width: '100%' }}\n          options={campaigns?.map(d => ({ label: d, value: d }))}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">ðŸ”Ž &nbsp; Search</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default SearchForm;","import SearchForm from './SearchForm';\n\nexport default SearchForm;","import LineChart from './LineChart';\n\nexport default LineChart;","import React from 'react';\n\nimport {\n  LineChart as CommonLineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { SearchResult } from 'store/common';\n\n\ntype LineChartProps = {\n    data: SearchResult,\n};\n\nconst LineChart = ({ data } : LineChartProps) : JSX.Element  => {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <CommonLineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"impressions\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"clicks\" stroke=\"#82ca9d\" />\n      </CommonLineChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LineChart;","import Main from './Main';\n\nexport default Main;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMount } from 'react-use';\n\n\nimport { RootState } from 'store/reducers';\nimport { SearchResult, FilterParameters } from 'store/common';\nimport { getMarketingData, searchMarketingData } from 'actions';\n\nimport SearchForm from 'components/Main/SearchForm';\nimport LineChart from 'components/Main/LineChart';\n\nimport styles from './main.module.scss';\n\n\n\n\nconst Main: React.FC = () => {\n\n  const dispatch = useDispatch();\n\n  const result: SearchResult = useSelector((store: RootState ) => store.marketing.result);\n\n  const { datasources, campaigns }: FilterParameters = useSelector((store: RootState ) => store.marketing.filterParameters);\n\n  useMount(() => {\n    dispatch(getMarketingData());\n  })\n\n  const handleSearch = useCallback(data => {\n    dispatch(searchMarketingData(data));\n  }, [dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles['search-container']}>\n        <SearchForm\n          datasources={datasources}\n          campaigns={campaigns}\n          handleSearch={handleSearch}\n        />\n\n      </div>\n      <div className={styles['result-container']}>\n        <LineChart data={result} />\n      </div>\n    </div>\n  )\n};\n\nexport default Main;\n","import { BaseAction, actionIds, MarketingSearchQuery } from 'store/common';\n\nexport const numberRequestStartAction = (): BaseAction => ({\n  type: actionIds.GET_NUMBER_REQUEST_START,\n  payload: null,\n});\n\n\n\nexport const numberRequestCompletedAction = (\n  numberGenerated: number\n): BaseAction => ({\n  type: actionIds.GET_NUMBER_REQUEST_COMPLETED,\n  payload: numberGenerated,\n});\n\n/* ================================================================= */\n\nexport const getMarketingData = (): BaseAction => ({\n  type: actionIds.GET_ALL_MARKETING_DATA_REQUESTED,\n  payload: null,\n});\n\nexport const searchMarketingData = (query: MarketingSearchQuery): BaseAction => ({\n  type: actionIds.SEARCH_MARKETING_DATA_REQUESTED,\n  payload: query,\n});","import React from 'react';\n\nimport MainView from 'views/Main';\n\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n      <header className=\"App-header\">\n        <h1>Advertising data challenge ðŸ“ˆ</h1>\n        <ul>\n          <li>Select zero to n datasources</li>\n          <li>Select zero to n campaigns</li>\n        </ul>\n        <span className=\"info\">(Where zero means \"All\")</span>\n      </header>\n      <main>\n        {/* YOUR ROUTING MAY BE HERE :P */}\n        <MainView />\n      </main>\n      <footer>\n        <span>\n          Copyright &copy; {(new Date).getFullYear()} ðŸš€\n        </span>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  BaseAction,\n  actionIds,\n  MarketingSearchQuery,\n  MarketingData,\n  FilterParameters,\n  SearchResult\n} from 'store/common';\n\nexport type NumberCollectionState = number[];\n\n\n\nexport type MarketingDataState = {\n  fetched: boolean,\n  inProgress: boolean,\n  error: string | null,\n  query: MarketingSearchQuery,\n  result: SearchResult,\n  data: MarketingData[],\n  filterParameters: FilterParameters\n}\n\nconst defaltQuery: MarketingSearchQuery = {\n  datasources: undefined,\n  campaigns: undefined\n};\n\nconst initialState: MarketingDataState  = {\n  fetched: false,\n  inProgress: false,\n  error: null,\n  query: defaltQuery,\n  result: [],\n  data: [], \n  filterParameters: {}\n}\n\n// immerjs would be good addition here\nexport const marketingDataReducer = (\n  state: MarketingDataState = initialState,\n  action: BaseAction\n) : MarketingDataState => {\n  switch (action.type) {\n\n  /* GET DATA */\n  case actionIds.GET_ALL_MARKETING_DATA_REQUESTED:\n    return { ...state, inProgress: true };\n  case actionIds.GET_ALL_MARKETING_DATA_SUCCEEDED:\n    // if data is fetched second time, in real case it may be not the same, therefor clear all query & result stuff\n    return { ...state, inProgress: false, data: action.payload, fetched: true, error: null, query: defaltQuery, result: [] };\n\n  /* SEARCH DATA */\n  case actionIds.SEARCH_MARKETING_DATA_REQUESTED:\n    return { ...state, inProgress: true };\n  case actionIds.SEARCH_MARKETING_DATA_SUCCEEDED:\n    return { ...state, inProgress: false, query: action.payload.query, result: action.payload.result };\n  case actionIds.SET_FILTER_PARAMETERS:\n    return { ...state, filterParameters: action.payload };\n\n  /* FAIL CASE */\n  case actionIds.GET_ALL_MARKETING_DATA_FAILED:\n  case actionIds.SEARCH_MARKETING_DATA_FAILED:\n    return { ...state, inProgress: false, data: [], fetched: true, error: action.payload, query: defaltQuery, result: [] };\n  default: \n    return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport {\n  MarketingDataState,\n  marketingDataReducer,\n} from './marketing-data.reducer';\n\nexport interface RootState {\n  marketing: MarketingDataState;\n}\n\nexport const rootReducers = combineReducers<RootState>({\n  marketing: marketingDataReducer\n});","import axios from 'axios';\nimport { MarketingData } from 'store/common';\n\nconst ROOT_URL = process.env.NODE_ENV === 'production' ? 'https://xekven.github.io/marketing-search' : '';\n\nexport const getMarketingData = async (): Promise<MarketingData[]> => {\n  return await axios.get(`${ROOT_URL}/assets/data.json`);\n};\n\n","import { MarketingData, SearchResult, MarketingSearchQuery, ResultEntity } from 'store/common';\n\nexport default function searchMarketingData (entries: MarketingData[], query: MarketingSearchQuery) : SearchResult  {\n  const output: Record<string, ResultEntity> = {};\n\n  entries.forEach(entry => {\n    // if matches our search criteria\n    const campaignMatch = !query.campaigns || query.campaigns.length === 0 || query.campaigns.includes(entry.campaign);\n    const datasourceMatch = !query.datasources || query.datasources.length === 0 || query.datasources.includes(entry.datasource);\n    if (campaignMatch && datasourceMatch) {\n\n      const entryClicks = +entry.clicks;\n      const entryImpressions = +entry.impressions;\n      // if already exists\n      if (output[entry.date]) {\n        const currentValue = output[entry.date];\n        currentValue.clicks = currentValue.clicks + entryClicks;\n        currentValue.impressions = currentValue.impressions + entryImpressions;\n      } else {\n        output[entry.date] = { clicks: entryClicks, impressions: entryImpressions};\n      }\n    }\n   \n  })\n\n\n  \n  return Object.entries(output).map(([date, { clicks, impressions }]) => ({ date, clicks, impressions }))\n}","import { MarketingData, FilterParameters } from 'store/common';\n// O (n)\nexport default function indexFilterParameters (entries: MarketingData[]) : FilterParameters {\n  const campaigns = {};\n  const datasources = {};\n\n  entries.forEach(entry => {\n    const {campaign, datasource } = entry;\n\n    if (!campaigns[campaign]) {\n      campaigns[campaign] = true;\n    }\n\n    if (!datasources[datasource]) {\n      datasources[datasource] = true;\n    }\n\n  })\n\n  return { campaigns: Object.keys(campaigns), datasources: Object.keys(datasources) };\n}","import { put, takeLatest, call, select } from 'redux-saga/effects';\nimport { AxiosResponse } from 'axios';\nimport isEqual from 'lodash/isEqual';\n\nimport { getMarketingData } from 'store/api';\nimport searchMarketingData from 'utilities/searchMarketingData';\nimport indexFilterParameters from 'utilities/indexFilterParameters';\n\nimport {\n  actionIds,\n  BaseAction,\n  MarketingData,\n  MarketingSearchQuery,\n  SearchResult,\n  FilterParameters\n} from 'store/common';\n\nexport function* watchNewGetMarketingDataStart() : Generator<any> {\n  // GET MARKETING DATA\n  yield takeLatest(\n    actionIds.GET_ALL_MARKETING_DATA_REQUESTED,\n    getMarketingDataSaga\n  );\n  // FILTER MARKETING DATA HERE\n  yield takeLatest(\n    actionIds.SEARCH_MARKETING_DATA_REQUESTED,\n    searchMarketingDataSaga\n  );\n}\n\nfunction* getMarketingDataSaga(): any  {\n\n  try {\n    const response: AxiosResponse = yield call(getMarketingData);\n\n    yield put({\n      type: actionIds.GET_ALL_MARKETING_DATA_SUCCEEDED,\n      payload: response.data\n    });\n\n    // calculate all possible filter options\n    const indexedFilterParameters: FilterParameters = yield call(indexFilterParameters, response.data);\n    \n    yield put({\n      type: actionIds.SET_FILTER_PARAMETERS,\n      payload: indexedFilterParameters\n    });\n    // search first time, so something should be shown in chart\n    yield* searchMarketingDataSaga({ type: '', payload: {}});\n  } catch ({ message }) {\n    yield put({\n      type: actionIds.GET_ALL_MARKETING_DATA_FAILED,\n      payload: message\n    });\n    // add error notification here\n  }\n}\n\nfunction* searchMarketingDataSaga(action: BaseAction): any  {\n\n  try {\n\n    // should be checking here if there are any blocking conditions\n\n    const query : MarketingSearchQuery = action.payload;\n\n    const oldQuery: MarketingSearchQuery = yield select(store => store.marketing.query);\n\n    if (!isEqual(oldQuery, query)) {\n      const marketingData: MarketingData[] = yield select(store => store.marketing.data);\n\n      const result: SearchResult = yield call(searchMarketingData, marketingData, query);\n\n      yield put({\n        type: actionIds.SEARCH_MARKETING_DATA_SUCCEEDED,\n        payload: { query, result }\n      });\n    } else {\n      console.warn('Multiple search detected! :P')\n    }\n\n   \n  } catch ({ message }) {\n  \n    yield put({\n      type: actionIds.SEARCH_MARKETING_DATA_FAILED,\n      payload: message\n    });\n    // add error notification here\n  }\n}\n","import { all, fork, } from 'redux-saga/effects';\nimport { watchNewGetMarketingDataStart } from './marketingSagas';\n\nexport const rootSaga = function* root() : Generator<any> {\n  yield all([fork(watchNewGetMarketingDataStart)]);\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger'\n\nimport { rootReducers } from './reducers';\nimport { rootSaga } from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancer =\n  (process.env.NODE_ENV !== 'production' &&\n    // eslint-disable-next-line\n    window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']) ||\n  compose;\n\n// middleware collection\nconst middlewares: any[] = [sagaMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(\n  rootReducers,\n  {},\n  composeEnhancer(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from 'store/index';\n\nimport 'styles/index.scss';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}